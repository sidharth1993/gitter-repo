{"version":3,"sources":["service/gitHubApi.js","components/Breadcrumbsgit.js","components/DisplayItems.js","service/filters.js","components/RightClickMenu.js","components/EditRepo.js","pages/LoggedIn.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["at","session","gitApi","getWithAt","url","axios","get","headers","then","response","data","catch","error","postWithAt","body","post","patchWithAt","Breadcrumbsgit","bc","setCurrentPage","Breadcrumbs","aria-label","length","map","b","index","Button","color","onClick","DisplayItems","objectArray","openSomething","rightClickItem","List","dense","object","ListItem","Grid","item","xs","md","ListItemText","onDoubleClick","repo","name","primary","ListItemIcon","onContextMenu","event","id","type","secondary","created_at","updated_at","checkRightClick","stopPropagation","preventDefault","X","clientX","Y","clientY","useStyles","makeStyles","theme","typography","padding","spacing","root","width","maxWidth","backgroundColor","palette","background","paper","RightClickMenu","element","contents","closing","optionSelected","classes","Popover","open","anchorReference","anchorPosition","top","left","anchorOrigin","vertical","horizontal","onClose","transformOrigin","className","component","content","button","Divider","marginTop","isRepoName","EditRepo","closeDialog","updateRepoObj","Boolean","oldRepoName","React","useState","has_downloads","has_issues","default_branch","description","disabled","archived","private","homepage","allow_squash_merge","allow_merge_commit","allow_rebase_merge","delete_branch_on_merge","is_template","values","setValues","success","setSuccess","updateRepoValuesBoolean","target","checked","updateRepoValuesText","value","Dialog","scroll","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","Collapse","in","Alert","action","IconButton","size","fontSize","FormControl","FormGroup","TextField","onChange","label","placeholder","multiline","FormControlLabel","control","Switch","FormHelperText","DialogActions","repoObj","login","updateRepo","displayObjects","currentRepo","rightClickArray","itemObjectToDisplay","flexGrow","demo","title","margin","displayObjectInitial","current","array","contextActionInitial","rcElement","openRepoDialog","LoggedIn","userDetails","query","URLSearchParams","useLocation","search","displayObject","setDisplayObject","contextAction","setContextAction","useEffect","code","FormData","append","access_token","authorize","avatar","avatar_url","repos_url","Repos","option","repoObject","currentArray","findIndex","push","Typography","variant","newPage","Branches","Files","file","getBranchContents","find","menuButton","marginRight","display","Header","user","AppBar","position","Toolbar","to","Avatar","alt","src","window","location","href","App","setUser","path","details","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c73f6ddc.chunk.js","sourcesContent":["import axios from 'axios';\r\nlet at = null;\r\nlet session = null;\r\nlet gitApi = 'https://api.github.com';\r\n\r\nconst authorize = (code) => {\r\n    const data = new FormData();\r\n    data.append(\"client_id\", 'd9ac0753dcb7cfae87de');\r\n    data.append(\"client_secret\", '177c3bb99b418a80a1bc1f32bc9ec5e885e6f95e');\r\n    data.append(\"code\", code);\r\n    data.append(\"redirect_uri\", 'https://sidharth1993.github.io/gitter-repo/');\r\n    return axios.post('https://github.com/login/oauth/access_token',data).then((response) => {\r\n        const params = new URLSearchParams(response.data);\r\n        const access_token = params.get(\"access_token\");\r\n        //sessionStorage.setItem('at',access_token);\r\n        at = access_token;\r\n        return \"success\";\r\n    })\r\n}\r\n\r\nconst getUserData = () => {\r\n    return getWithAt(`${gitApi}/user`).then((response) => {\r\n        if (response.login) {\r\n            session = response;        \r\n        }\r\n        return response;\r\n    }) \r\n}\r\n\r\nconst getRepos = () => {\r\n    return getWithAt(`${session.repos_url}`).then((response) => {\r\n        return response;\r\n    })\r\n}\r\n\r\nconst updateRepo = (repo,repoObj) => {\r\n    return patchWithAt(`${gitApi}/repos/${session.login}/${repo}`,repoObj).then((response) => {\r\n        return response;\r\n    })\r\n}\r\n\r\nconst createRepo = (repoObj) => {\r\n    return postWithAt(`${gitApi}/user/repos`,repoObj).then((response) => {\r\n        return response;\r\n    })\r\n}\r\n\r\nconst deleteRepo = (repo) => {\r\n    return getWithAt(`${gitApi}/repos/${session.login}/${repo}`).then((response) => {\r\n        return response;\r\n    })\r\n}\r\n\r\nconst getBranches = (repo) => {\r\n    return getWithAt(`${gitApi}/repos/${session.login}/${repo}/branches`).then((response) => {\r\n        return response;\r\n    })\r\n}\r\n\r\nconst getBranchContents = (repo) => {\r\n    return getWithAt(`${gitApi}/repos/${session.login}/${repo}/contents`).then((response) => {\r\n        return response;\r\n    })\r\n}\r\n\r\nconst getWithAt = (url) => {\r\n    //const at = sessionStorage.getItem('at');\r\n    return axios.get(url,{\r\n        headers:{\r\n            \"Authorization\" : `token ${at}`\r\n        }\r\n    }).then( (response) => {\r\n        return response.data;\r\n    }).catch( (error) => {\r\n        return error;\r\n    })\r\n}\r\n\r\nconst postWithAt = (url,body) => {\r\n    //const at = sessionStorage.getItem('at');\r\n    return axios.post(url,body,{\r\n        headers:{\r\n            \"Authorization\" : `token ${at}`\r\n        }\r\n    }).then( (response) => {\r\n        return response.data;\r\n    }).catch( (error) => {\r\n        return error;\r\n    })\r\n}\r\n\r\nconst patchWithAt = (url,body) => {\r\n    //const at = sessionStorage.getItem('at');\r\n    return axios.post(url,body,{\r\n        headers:{\r\n            \"Authorization\" : `token ${at}`\r\n        }\r\n    }).then( (response) => {\r\n        return response.data;\r\n    }).catch( (error) => {\r\n        return error;\r\n    })\r\n}\r\n\r\nexport {\r\n    authorize,\r\n    getUserData,\r\n    getRepos,\r\n    getBranches,\r\n    getBranchContents,\r\n    updateRepo,\r\n    createRepo,\r\n    deleteRepo\r\n}\r\n","import React from 'react';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Breadcrumbsgit = ({bc, setCurrentPage}) => {\r\n\r\n    return (\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n        {\r\n            bc && bc.length > 0 && bc.map((b, index) => <Button key={index} color=\"inherit\" onClick={()=>{setCurrentPage(b)}} >{b}</Button>)\r\n        }\r\n        </Breadcrumbs>\r\n    );\r\n}\r\n\r\nexport default Breadcrumbsgit;","import React from 'react';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst DisplayItems = ({objectArray,openSomething,rightClickItem}) => {\r\n\r\n    const openFile = (repo) => {\r\n        openSomething(repo);\r\n    }\r\n    return (\r\n        <List dense={true}>\r\n        {\r\n            objectArray && objectArray.length > 0 && objectArray.map((object,index) => {\r\n                return (\r\n                    <ListItem key={index}>\r\n                        <Grid item xs={4} md={4}>\r\n                            <ListItemText onDoubleClick={() => { openFile(object.name) }} primary={\r\n                                    <ListItemIcon onContextMenu={(event) => {rightClickItem(event,object.id)}}>\r\n                                        {\r\n                                        (object.type)? \r\n                                        (object.type === 'file')? <DescriptionIcon /> : <FolderIcon />\r\n                                        :\r\n                                        <FolderIcon /> \r\n                                        }\r\n                                    </ListItemIcon>\r\n                            } secondary={object.name} />\r\n                        </Grid>\r\n                        <Grid item xs={4} md={4}>\r\n                            {object.created_at && <ListItemText primary={object.created_at} secondary=\"created on\" />}\r\n                        </Grid>\r\n                        <Grid item xs={4} md={4}>\r\n                            {object.created_at && <ListItemText primary={object.updated_at} secondary=\"updated on\" />}\r\n                        </Grid>\r\n                    </ListItem>\r\n                );\r\n            })\r\n        }\r\n    </List>\r\n    );\r\n}\r\n\r\nexport default DisplayItems;","const checkRightClick = (event) => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    const position = {\r\n        X:event.clientX,\r\n        Y:event.clientY\r\n    };\r\n    // const element = event.currentTarget;\r\n    return position\r\n}\r\n\r\nexport {\r\n    checkRightClick\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function RightClickMenu({element,contents,closing,optionSelected}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n\r\n    <div>\r\n        {\r\n            element && \r\n            <Popover\r\n                id='simple-popover'\r\n                open={true}\r\n                anchorReference=\"anchorPosition\"\r\n                anchorPosition={{ top: element.Y, left: element.X }}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                    }}\r\n                onClose={closing}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.root}>\r\n                    <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n                        {\r\n                            contents && contents.map((content, index) => {\r\n                            return (\r\n                                <span key={index}>\r\n                                    <ListItem button onClick={() => {optionSelected(content)}} >\r\n                                        <ListItemText primary={content} />\r\n                                    </ListItem>\r\n                                    { index+1 !== contents.length && <Divider /> }\r\n                                </span>\r\n                        );\r\n                        })\r\n                        }\r\n                    </List>\r\n                </div>\r\n            </Popover>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { createRepo, updateRepo } from '../service/gitHubApi';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nlet isRepoName = false;\r\n\r\nexport default function EditRepo({repo,closeDialog,updateRepoObj}) {\r\n\r\n    const classes = useStyles();\r\n\r\n    isRepoName = Boolean(repo.name);\r\n\r\n    const oldRepoName = repo.name;\r\n\r\n    const [ values, setValues] = React.useState({\r\n        has_downloads: repo.has_downloads || false,\r\n        has_issues: repo.has_issues || false,\r\n        default_branch: repo.default_branch || 'master',\r\n        description: repo.description,\r\n        disabled: repo.disabled || false,\r\n        archived: repo.archived || false,\r\n        private: repo.private || false,\r\n        name: repo.name,\r\n        homepage: repo.homepage,\r\n        allow_squash_merge: repo.allow_squash_merge || false,\r\n        allow_merge_commit: repo.allow_merge_commit || false,\r\n        allow_rebase_merge: repo.allow_rebase_merge || false,\r\n        delete_branch_on_merge: repo.delete_branch_on_merge || false,\r\n        is_template: repo.is_template || false\r\n    });\r\n\r\n    const [success, setSuccess] = useState(null);\r\n\r\n    const updateRepoValuesBoolean = (event) => {\r\n        setValues({...values, [event.target.name]: event.target.checked});\r\n    }\r\n\r\n    const updateRepoValuesText = (event) => {\r\n        setValues({...values, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const createRepository = () => {\r\n        createRepo(values).then((response) => {\r\n            if (response && response.name && response.name === values.name) {\r\n                isRepoName = true;\r\n                updateRepoObj(response);\r\n                setSuccess(\"Created\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const updateRepository = () => {\r\n        updateRepo(oldRepoName, values).then((response) => {\r\n            if (response && response.name && response.name === values.name) {\r\n                isRepoName = true;\r\n                updateRepoObj(response);\r\n                setSuccess(\"Updated\");\r\n            }\r\n        })\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={true}\r\n        onClose={closeDialog}\r\n        scroll=\"paper\"\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">{(isRepoName)?values.name:'New Repo'}</DialogTitle>\r\n        <DialogContent dividers={true}>\r\n            {success && \r\n                    <div className={classes.root}>\r\n                    <Collapse in={Boolean(success)}>\r\n                        <Alert\r\n                        action={\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                    setSuccess(null);\r\n                                }}\r\n                            >\r\n                                <CloseIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                            }\r\n                        >\r\n                            {success} successfully!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    </div>\r\n            }\r\n\r\n\r\n    <FormControl component=\"fieldset\">\r\n      <FormGroup>\r\n        <TextField name=\"name\" value={values.name} onChange={updateRepoValuesText} label=\"Name\" id=\"standard-size-small\" placeholder=\"gitter-repo\" size=\"small\" />\r\n\r\n        <TextField name=\"homepage\" value={values.homepage} onChange={updateRepoValuesText} label=\"Homepage\" id=\"standard-size-small\" placeholder=\"http://localhost:3000\" size=\"small\" />\r\n\r\n        <TextField name=\"description\" value={values.description} onChange={updateRepoValuesText} label=\"Description\" id=\"standard-size-small\" placeholder=\"Repo created on gitter\" size=\"small\" multiline />\r\n\r\n        <TextField name=\"default_branch\" value={values.default_branch} onChange={updateRepoValuesText} label=\"Default Branch\" id=\"standard-size-small\" size=\"small\" />\r\n\r\n        <FormControlLabel\r\n          control={<Switch checked={values.private} onChange={updateRepoValuesBoolean} name=\"private\" />}\r\n          label=\"Private repo?\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={values.archived} onChange={updateRepoValuesBoolean} name=\"archived\" />}\r\n          label=\"Archived repo?\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={values.disabled} onChange={updateRepoValuesBoolean} name=\"disabled\" />}\r\n          label=\"Disabled repo?\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={values.has_issues} onChange={updateRepoValuesBoolean} name=\"has_issues\" />}\r\n          label=\"Repo issues?\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={values.has_downloads} onChange={updateRepoValuesBoolean} name=\"has_downloads\" />}\r\n          label=\"Downloadable?\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={values.allow_squash_merge} onChange={updateRepoValuesBoolean} name=\"allow_squash_merge\" />}\r\n          label=\"Can squash merge?\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={values.allow_merge_commit} onChange={updateRepoValuesBoolean} name=\"allow_merge_commit\" />}\r\n          label=\"Can merge commit?\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={values.allow_rebase_merge} onChange={updateRepoValuesBoolean} name=\"allow_rebase_merge\" />}\r\n          label=\"Can rebase merge?\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={values.delete_branch_on_merge} onChange={updateRepoValuesBoolean} name=\"delete_branch_on_merge\" />}\r\n          label=\"Delete original branch on merge?\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={values.is_template} onChange={updateRepoValuesBoolean} name=\"is_template\" />}\r\n          label=\"Use as template to create repos in future?\"\r\n        />\r\n      </FormGroup>\r\n      <FormHelperText>Archived repo can only be unarchived on https://github.com </FormHelperText>\r\n\r\n    </FormControl>\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {\r\n             (isRepoName)? \r\n             <Button onClick={updateRepository} color=\"primary\">Edit</Button> :\r\n             <Button onClick={createRepository} color=\"primary\">Create</Button>\r\n          }  \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { authorize, getRepos, getUserData, getBranches, getBranchContents } from '../service/gitHubApi';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Breadcrumbsgit from '../components/Breadcrumbsgit';\r\nimport DisplayItems from '../components/DisplayItems';\r\nimport { checkRightClick } from '../service/filters';\r\nimport RightClickMenu from '../components/RightClickMenu';\r\nimport EditRepo from '../components/EditRepo';\r\n\r\nlet displayObjects = {};\r\nlet currentRepo = null;\r\nlet rightClickArray = [];\r\nlet itemObjectToDisplay = {};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      maxWidth: 752,\r\n    },\r\n    demo: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n      margin: theme.spacing(4, 0, 2),\r\n    },\r\n  }));\r\n\r\nconst useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst displayObjectInitial = {\r\n    current: null,\r\n    bc: [],\r\n    array: []\r\n};\r\n\r\nconst contextActionInitial = {\r\n    rcElement : null,\r\n    openRepoDialog : false\r\n};\r\n\r\nconst LoggedIn = ({userDetails}) => {\r\n    const query = useQuery();\r\n    const classes = useStyles();\r\n    const [displayObject, setDisplayObject] = useState(displayObjectInitial);\r\n    const [contextAction, setContextAction] = useState(contextActionInitial);\r\n\r\n    const openFile = (file) => {\r\n        if(displayObject.current === 'Repos') {\r\n            currentRepo = file;\r\n            getBranches(file).then((response) => {\r\n                displayObjects.Branches = response;\r\n                setDisplayObject({\r\n                    current: \"Branches\",\r\n                    bc: [\"Repos\",\"Branches\"],\r\n                    array: response\r\n                });\r\n            })\r\n        } else if (displayObject.current === 'Branches') {\r\n            getBranchContents(currentRepo).then((response) => {\r\n                displayObjects.Files = response;\r\n                setDisplayObject({\r\n                    current: \"Files\",\r\n                    bc: [\"Repos\",\"Branches\",\"Files\"],\r\n                    array: response\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        const code = query.get('code');\r\n        if (code) {\r\n            authorize(code).then((response) => {\r\n                if (response === 'success') {\r\n                    getUserData().then((response) => {\r\n                        if (response.login) {\r\n                            userDetails({\r\n                                login: response.login,\r\n                                avatar: response.avatar_url\r\n                            })\r\n                            getRepos().then((response) => {\r\n                                displayObjects.Repos = response;\r\n                                setDisplayObject({\r\n                                    current: \"Repos\",\r\n                                    bc: [\"Repos\"],\r\n                                    array: response\r\n                                });\r\n                            });\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },[]);\r\n\r\n    const updatePage = (newPage) => {\r\n        if (newPage === \"Repos\") {\r\n            displayObjects.Branches = null;\r\n            setDisplayObject({\r\n                current: newPage,\r\n                bc: [\"Repos\"],\r\n                array: displayObjects[newPage]\r\n            });\r\n        } else if (newPage === \"Branches\") {\r\n            displayObjects.Files = null;\r\n            setDisplayObject({\r\n                current: newPage,\r\n                bc: [\"Repos\",\"Branches\"],\r\n                array: displayObjects[newPage]\r\n            });\r\n        }\r\n    }\r\n\r\n    const rightClickElement = (event) => {\r\n        if (displayObject.current === \"Repos\") {\r\n            rightClickArray = [\"New Repo\"];\r\n        } else if (displayObject.current === \"Branches\") {\r\n            rightClickArray = [\"New Branch\"];\r\n        } else if (displayObject.current === \"Files\") {\r\n            rightClickArray = [\"New File\"];\r\n        }\r\n        const element = checkRightClick(event);\r\n        setContextAction({...contextAction,rcElement:element});\r\n    }\r\n\r\n    const rightClickItem = (event,id) => {\r\n        if (displayObject.current === \"Repos\") {\r\n            // right click done on repos, fetching specific repo by id\r\n            itemObjectToDisplay = displayObject.array.find((element) => element.id === id);\r\n            rightClickArray = [\"Delete Repo\", \"Get/Edit details\"];\r\n        } else if (displayObject.current === \"Branches\") {\r\n            rightClickArray = [\"Delete Branch\", \"Branch History\"];\r\n        } else if (displayObject.current === \"Files\") {\r\n            rightClickArray = [\"Download File\"];\r\n        }\r\n        const element = checkRightClick(event);\r\n        setContextAction({...contextAction,rcElement:element});\r\n    }\r\n\r\n    const closeRightClickElement = () => {\r\n        setContextAction({...contextAction,rcElement:null});\r\n    }\r\n\r\n    const rightClickMenuOptionSelected = (option) => {\r\n        if (displayObject.current === \"Repos\") {\r\n            if (option === \"Get/Edit details\") {\r\n                setContextAction({...contextAction,openRepoDialog:true,rcElement:null});\r\n            } else if (option === \"New Repo\") {\r\n                itemObjectToDisplay = {}\r\n                setContextAction({...contextAction,openRepoDialog:true,rcElement:null});\r\n            } else if (option === \"Delete Repo\") {\r\n                itemObjectToDisplay = {}\r\n                setContextAction({...contextAction,openRepoDialog:true,rcElement:null});\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setContextAction({...contextAction,openRepoDialog:false});\r\n    }\r\n\r\n    const updateRepository = (repoObject) => {\r\n        let currentArray = displayObject.array;\r\n        const isPresent = currentArray.findIndex(element=>element.id === repoObject.id);\r\n        if (isPresent >= 0) {\r\n            currentArray = currentArray.map((element) => {\r\n                if (element.id === repoObject.id) {\r\n                    return repoObject;\r\n                } else {\r\n                    return element;\r\n                }\r\n            })\r\n        } else {\r\n            currentArray.push(repoObject);\r\n        }\r\n        setDisplayObject({...displayObject,array:currentArray})\r\n    }\r\n\r\n\r\n    return (\r\n        <div onContextMenu={rightClickElement} >\r\n            <RightClickMenu element={contextAction.rcElement} contents={rightClickArray} closing={closeRightClickElement} optionSelected={rightClickMenuOptionSelected} />\r\n            {contextAction.openRepoDialog &&  <EditRepo repo={itemObjectToDisplay} closeDialog={closeDialog} updateRepoObj={updateRepository} />}\r\n            <Grid item xs={12} md={12}>\r\n                <Typography variant=\"h4\" className={classes.title}>\r\n                    {\r\n                        displayObject && displayObject.bc && <Breadcrumbsgit bc={displayObject.bc} setCurrentPage={updatePage} ></Breadcrumbsgit>\r\n                    }\r\n                </Typography>\r\n                <div className={classes.demo}>\r\n                    <DisplayItems objectArray={displayObject.array} openSomething={openFile} rightClickItem={rightClickItem}></DisplayItems>\r\n                </div>\r\n        </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoggedIn;","import { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  avatar: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Header({user}) {\r\n  const classes = useStyles();\r\n\r\n  const loginClick = () => {\r\n    window.location.href = 'https://github.com/login/oauth/authorize?scope=user,repo,delete_repo&client_id=d9ac0753dcb7cfae87de&redirect_uri=https://sidharth1993.github.io/gitter-repo/';\r\n  }\r\n\r\n  return (\r\n    <header>\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <Link to=\"/\">Gitter</Link>\r\n                    </Typography>\r\n                    {\r\n                        user ? \r\n                        <div className={classes.avatar} >\r\n                            <Avatar alt={`${user.login} avatar`} src={user.avatar} />\r\n                        </div> \r\n                        : \r\n                        <div>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                github.com /<Button color=\"inherit\"  onClick={loginClick}>authorize</Button>\r\n                            </Typography>\r\n                        </div>\r\n                    }\r\n                                    \r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n  </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import './App.scss';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { Route, Switch } from 'react-router';\r\nimport LoggedIn from './pages/LoggedIn';\r\nimport LoginPage from './pages/LoginPage';\r\nimport Header from './components/Header';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const userDetails = (details) => {\r\n    setUser(details);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n          <Header user={user} ></Header>\r\n          <section>\r\n            <Switch>\r\n              <Route path=\"/\">\r\n                  <LoggedIn userDetails={userDetails} ></LoggedIn>\r\n              </Route>\r\n            </Switch>\r\n          </section>\r\n          <AppBar position=\"static\">\r\n                <Toolbar>\r\n                  <Typography variant=\"h6\">\r\n                        Footer\r\n                  </Typography>              \r\n                </Toolbar>\r\n            </AppBar>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}